Divertor Shaping
================

This document refers to the ``DivertorBuilder`` class in ``firstwall.py``.  

Overview
--------
Building the divertor is the last step, after the first wall shaping, 
to obtain the final wall.
While the first wall profile is shaped (``FirstWall`` class), via iterations, 
to minimise the heat flux onto the surfaces, and hence downstream of a heat 
flux calculation (``FluxSurface`` class), the divertor profile shaping can be 
seen as a geometrical optimisation. Such optimisation is obtained via external 
geometrical inputs, and according the equilibrium configuraion. Specifically, 
separatrix and flux lines in the divertor region. 
First wall profile and divertor profile are two different grometries that need 
to be "attached". The shared border between the two geometries, along whichh they
will be attached, is a xz plane passing through the x-point(s). Thus, the 
first wall profile is extended until the x-point, and the divertor profile starts 
from the x-point.

Divertor entrance
-----------------
The divertor profile starts to be drawn from the x-point. 
Hence the divertor entrance has the z coordinate of the x-point. 
The lower threshold of how wide this aperture should be, is decided by the user 
through two inputs:

* xpt_outer_gap: Gap between x-point and outer wall
* xpt_inner_gap: Gap between x-point and inner wall

From the first wall profile optimisation, if the aperture needs be wider to handle 
the heat loads, the abovementioned inputs are overwritten accordingly.

Divertor target plates
----------------------
How long the divertor should be is decided by the divertor target plates.
As first input, the user has to decide the strike points, meaning where the separatrix
has to intersect inner and outer target. The two unique points are set giving:

* outer_strike_r: Outer strike point major radius
* inner_strike_r: Inner strike point major radius

Once identified the strike points, the user can decide how long the plates should be, 
giving:

* tk_outer_target_sol: Outer target length between strike point and SOL side
* tk_outer_target_pfr: Outer target length between strike point and PFR side
* tk_inner_target_sol: Inner target length between strike point and SOL side
* tk_inner_target_pfr: Inner target length between strike point and PFR side

Finally the plates can be tilted. The user can assign an angle between flux line 
and target plate:

* theta_outer_target: Angle between flux line tangent at outer strike point and SOL side of outer target
* theta_inner_target: Angle between flux line tangent at inner strike point and SOL side of inner target

To be noticed, the abovementioned :math:`\theta` is not the glancing angle, 
commonly indicated with :math:`\Gamma`, but its component over a poloidal plane.
A further, and better description should accept the actual glancing angle as input.

Input soggetti a limitazioni

















A tokamak plasma can be seen as separated in two regions, the core and the 
scrape-off layer (SOL).
The core-plasma is confined on nested closed flux surfaces. Of these closed surfaces, 
the outermost one is called the Last Closed Flux Surface (LCFS).
The flux surfaces outside the LCFS belong to the SOL, they intersect the tokamak wall 
and relevant field lines are open.

The plasma flows mainly along the field lines lying on the flux surfaces. 
All flux surfaces outside the LCFS belong to the SOL, they intersect the tokamak wall 
and relevant field lines are open. 

The model assumes the plasma to follow the filed lines in the SOL, assuming the radial transport generated by drift and turbulence is negligible in the far SOL.

Collisional and turbulent processes lead the plasma, confined in the core, 
to diffuse and outflow into the SOL.

Perpendicular and parallel transport in the SOL results in the exponential 
decay of plasma density and temperature moving away from the LCFS in the 
radial direction.
The exhaust power (:math:`P_{SOL}`) is assumed to enter the SOL at the Outboard
Mid-Plane (OMP - the subscript ‚Äúu‚Äù is used for this location, meaning ‚Äúupstream‚Äù) 
and it separates into two flows, one towards the inner divertor, another to the 
outer divertor.

.. figure:: ../images/nova/SOL_power_sharing.png
   :name: fig:SOL_power_sharing
   :align: center

   Schematic of the model for the SOL power sharing between inner and outer divertors. Illustrated, as an example, a LFS Snowflake Minus divertor.

The heat flux along the field lines in the SOL is usually assumed to decay 
exponentially with the distance from the LCFS at the OMP, :math:`r_u`:

.. math::
   
   q_{\parallel}(r_u) = q_{\parallel,0}e^{-r_u/\lambda_q}
   
Where :math:`q_{\parallel,0}` is the flux at the separatrix, and :math:`\lambda_q` 
is the heatflux decay length in the SOL.

To be more precise, the SOL exhibits two different regions [Nespoli_2017]_:

- A ‚Äúnear‚Äù SOL, extending a few mm from the LCFS, characterized by a steep profile of :math:`q_{\parallel}`
  and responsible for the peak heat loads in the divertor region;
- A ‚Äúfar‚Äù SOL, typically some cm wide, with a flatter profile of :math:`q_{\parallel}`
  and responsible for most of the heat deposited onto the first wall.

.. figure:: ../images/nova/hf_radial_profile.png
   :scale: 50 %
   :name: fig:hf_radial_profile
   :align: center

   Parallel heat flux radial profile in JET.

The parallel heat flux radial profile :math:`q_{\parallel}` is then better described by a sum of two 
exponentials, associated with the two different regions:

.. math::
   
   q_{\parallel}(r_u) = q_{n}e^{-r_u/\lambda_n} + q_{f}e^{-r_u/\lambda_f}

Where :math:`\lambda_n` and :math:`\lambda_f` are the near and far SOL decay lengths and :math:`q_n` and :math:`q_f` 
are the associated heat flux magnitudes.

According to the above expression, the code calculates the radial profile of the 
poloidal component of the heat flux at the OMP, assuming :math:`P_{SOL}` distributed 
between near and far scrape off layer:

.. math::
   
   q_{p,u}(r_u) = \dfrac{P_{SOL,n}e^{-r_u/\lambda_n}}{2 \pi R(r_u)\lambda_n} + \dfrac{P_{SOL,f}e^{-r_u/\lambda_f}}{2 \pi R(r_u)\lambda_f}

At the OMP, the heat flux parallel to the magnetic field :math:`q_{\parallel,u}` and that parallel to 
the poloidal component of the field :math:`q_{p,u}` are related by :math:`q_{\parallel,u} = q_{p,u}(B_{tot,u}/B_{p,u)}`.

To compute the heat flux at the target location, one must consider that each poloidal 
flux surface has a ‚Äúwidth‚Äù, evaluated at the outboard mid-plane and indicated here as :math:`dr_u` [Maurizio_2020]_.

.. figure:: ../images/nova/flux_expansion.png
   :scale: 50 %
   :name: fig:flux_expansion
   :align: center

   Description of the SOL scalar coordinate :math:`dr_{u}` , defined at the outboard mid-plane, 
   and its relation to the SOL scalar coordinate dx, defined at the divertor target.


Such flux surface width varies when moving poloidally around the confined plasma or along 
the divertor leg. The ratio of the width at the target and at the OMP
is called target poloidal flux expansion.

.. math::
   
   f_{x,t} = \dfrac{dr_t}{dr_u} = \dfrac{R_{u}B_{p,u}}{R_{t}B_{p,t}}

Where :math:`R_u` and :math:`B_{p,u}` are major radius and poloidal magnetic field at the outboard midplane, 
and :math:`R_t` and :math:`B_{p,t}` are major radius and poloidal magnetic field at the target.

Since the power entering a flux tube at the OMP location is equal to the power that exits 
the same flux tube at the target, :math:`2\pi R_{u} dr_{u} q_{p,u} = 2\pi R_{t} dr_{u} f_{x,t} q_{p,t}` 
the poloidal heat flux component at the target can be calculated as:

.. math::

   q_{p,t} = q_{p,u}\frac{R_u}{R_t}\frac{1}{f_{x,t}}

From the poloidal component, at the target, the perpendicular heat flux component is calculated 
considering the angle between flux surface and target surface:

.. math::

   q_{\perp,ùë°} = q_{p,t}sin\beta_t

.. rubric:: References

.. [Nespoli_2017] NESPOLI, Federico. Scrape-Off Layer physics in limited plasmas in TCV. s.l.: EPFL, 2017

.. [Maurizio_2020] MAURIZIO, Roberto. Investigating Scrape-Off Layer transport in alternative divertor geometries on the TCV tokamak. s.l.: EPFL, 2020.



