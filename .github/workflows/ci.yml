name: bluemira_ci

on:
  pull_request:
  push:
    branches:
      - develop
      - main

jobs:
  linter:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.10"
      - name: Check Code Quality
        shell: bash -l {0}
        run: |
          pip install pre-commit
          pre-commit run --all-files

  docs:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Build
        uses: ./.github/workflows/actions/build
        with:
          os: ubuntu-latest
          python-version: "3.10"
          bm-private-data-key: ${{ secrets.BLUEMIRA_PRIVATE_DATA_DEPLOY_KEY }}

      - name: Test Documentation code snippets
        shell: bash -l {0}
        run: pytest documentation

      - name: Build Documentation bluemira
        shell: bash -l {0}
        run: |
          sphinx-build -j auto -W documentation/source documentation/build

  test:
    strategy:
      matrix:
        os: ["ubuntu-latest"]
        python-version: ["3.10", "3.11"]
      fail-fast: false
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Build
        uses: ./.github/workflows/actions/build
        with:
          os: ${{ matrix.os }}
          python-version: ${{ matrix.python-version }}
          bm-private-data-key: ${{ secrets.BLUEMIRA_PRIVATE_DATA_DEPLOY_KEY }}
          with-artifact: "true"

      - name: Run pytest bluemira
        shell: bash -l {0}
        env:
          # Flag to run longrun tests when merging dependency updates
          # https://github.com/actions/runner/issues/409#issuecomment-752775072
          PYTEST_LONGRUN: ${{ github.event.pull_request.head.ref == 'develop_dependencies' && '--longrun' || '' }}
          PYTEST_PRIVATE: ${{ !github.event.pull_request.head.repo.fork && '--private' || '' }}
        run: |
          pytest --cov=bluemira \
                 --cov-report html:htmlcov_bluemira \
                 --cov-report xml \
                 --json-report \
                 --json-report-indent=3 \
                 --reactor \
                 ${PYTEST_PRIVATE} \
                 ${PYTEST_LONGRUN} \
                 tests eudemo/eudemo_tests

      - name: Upload test report
        uses: actions/upload-artifact@v4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          name: report-json_${{ matrix.python-version }}_${{ matrix.os }}
          path: .report.json
          overwrite: true

      - name: "Upload coverage to Codecov"
        uses: codecov/codecov-action@v4
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        with:
          fail_ci_if_error: ${{ github.ref_name == 'develop' || github.ref_name == 'main' }}
